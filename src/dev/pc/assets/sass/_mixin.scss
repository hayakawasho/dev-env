//　breakpoint
@mixin query-max($breakpoint) {
  @media (max-width: $breakpoint +(-1) ) {
    @content;
  }
}
@mixin query-min($breakpoint) {
  @media (min-width: $breakpoint) {
    @content;
  }
}
@mixin query($breakpoint-min, $breakpoint-max) {
  @media (min-width: $breakpoint-min) and (max-width: $breakpoint-max +(-1)) {
    @content;
  }
}
// clearfix
@mixin clearfix {
  &:after {
    content: "";
    display: block;
    clear: both;
  }
}
// テキストぶっ飛ばし
@mixin text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: none;
}
// rem
@mixin rem($size, $base:10) {
  font-size: $size + px;
  font-size: ($size / $base) + rem;
}
// Center Elements Horizontally and Vertically
@mixin table-middle($width, $height) {
  width: $width;
  height: $height;
  display: table;
  text-align: center;
  > * {
    vertical-align: middle;
    display: inline-block;
  }
}
@mixin inline-block-middle($width, $height) {
  width: $width;
  height: $height;
  display: block;
  text-align: center;
  > * {
    vertical-align: middle;
    display: inline-block;
  }
  &:before {
    content: "";
    height: 100%;
    vertical-align: middle;
    width: 0;
    display: inline-block;
  }
}
//sprite
@mixin sprite-width($sprite, $scale:1) {
  width: nth($sprite, 5) * $scale;
}
@mixin sprite-height($sprite, $scale:1) {
  height: nth($sprite, 6) * $scale;
}
@mixin sprite-position($sprite, $scale:1) {
  $sprite-offset-x: nth($sprite, 3) * $scale;
  $sprite-offset-y: nth($sprite, 4) * $scale;
  background-position: $sprite-offset-x $sprite-offset-y;
}
@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
  background-repeat: no-repeat;
}
@mixin sprite-size($sprite, $scale:1) {
  background-size: nth($sprite, 7)*$scale nth($sprite, 8)*$scale;
}
@mixin sprite($sprite, $scale:1) {
  display: inline-block;
  @include sprite-image($sprite);
  @include sprite-position($sprite,$scale);
  @include sprite-width($sprite,$scale);
  @include sprite-height($sprite,$scale);
  @include sprite-size($sprite,$scale);
}
// placeholder
@mixin placeholder($color, $size) {
  &::placeholder {
    @include rem($size);
    font-family: $base-font-family;
    color: $color;
  }
}
@mixin retina {
  @media (-webkit-min-device-pixel-ratio: 2),
  (min-resolution: 2dppx) {
    @content;
  }
}
//矢印の上下中央指定
@mixin middle-arrow($direction, $length) {
  position: absolute;
  top: 50%;
  width: $length;
  height: $length;
  @if $direction == top {
    margin-top: -($length/2)-($length/4);
    transform: rotate(135deg);
  }
  @else if $direction == bottom {
    margin-top: -($length/2)+($length/4);
    transform: rotate(-45deg);
  }
  @else if $direction == left {
    margin-top: -$length/2;
    transform: rotate(45deg);
  }
  @else if $direction == right {
    margin-top: -$length/2;
    transform: rotate(-135deg);
  }
}
// Word Wrapping
@mixin word-wrap() {
  -ms-word-break: break-all;
  word-break: break-all;
  word-break: break-word;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}
//circle
@mixin circle($size) {
  width: $size;
  height: $size;
  border-radius: 100%;
}
@mixin rounded-circle($height) {
  height: $height;
  -webkit-border-radius: $height/2;
  -moz-border-radius: $height/2;
  border-radius: $height/2;
}
//リンクカラーの一括設定
@mixin linkColor($color:#0033cc) {
  color: $color;
  &:hover,
  &:active,
  &:focus {
    color: lighten($color, 20%);
  }
}
//カラム幅
@mixin column-width ( $value: 150px ) {
  -webkit-column-width: $value;
  -moz-column-width: $value;
  column-width: $value;
}
@mixin box-shadow( $h: 10px, $v: 10px, $b: 0px, $s: 0px, $c: #000000 ) {
  -webkit-box-shadow: $h $v $b $s $c;
  -moz-box-shadow: $h $v $b $s $c;
  box-shadow: $h $v $b $s $c;
}
//縦横比率を維持したまま要素を拡大
@mixin background-aspect($width, $height) {
  width: 100%;
  padding-top: percentage($height/$width);
  box-sizing: border-box;
  background-size: cover;
}
//グラデーション
@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == vertical {
    // vertical：横
    background: -moz-linear-gradient(top, $start-color 0%, $end-color 100%);
    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-linear-gradient(top, $start-color 0%,$end-color 100%);
    background: -o-linear-gradient(top, $start-color 0%,$end-color 100%);
    background: -ms-linear-gradient(top, $start-color 0%,$end-color 100%);
    background: linear-gradient(to bottom, $start-color 0%,$end-color 100%);
    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=0 );
  }
  @else if $orientation == horizontal {
    // horizontal：縦
    background: -moz-linear-gradient(left, $start-color 0%, $end-color 50%);
    background: -webkit-gradient(linear, left top, right top, color-stop(0%,$start-color), color-stop(50%,$end-color));
    background: -webkit-linear-gradient(left, $start-color 0%,$end-color 50%);
    background: -o-linear-gradient(left, $start-color 0%,$end-color 50%);
    background: -ms-linear-gradient(left, $start-color 0%,$end-color 50%);
    background: linear-gradient(to right, $start-color 0%,$end-color 50%);
    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  }
  @else {
    // radial：
    background: -moz-radial-gradient(center, ellipse cover, $start-color 0%, $end-color 100%);
    background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%,$start-color), color-stop(100%,$end-color));
    background: -webkit-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
    background: -o-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
    background: -ms-radial-gradient(center, ellipse cover, $start-color 0%,$end-color 100%);
    background: radial-gradient(ellipse at center, $start-color 0%,$end-color 100%);
    filter:progid:DXImageTransform.Microsoft.gradient( startColorstr='$start-color', endColorstr='$end-color',GradientType=1 );
  }
}
