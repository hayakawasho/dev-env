// margin/padding
@mixin utility($nth: 5, $start: 0, $end: 14, $size: default) {
  @for $i from $start through $end {
    @if $size == default {
      .u-mt#{$i * $nth} {
        margin-top: ($nth * $i)+px !important;
      }
      .u-mr#{$i * $nth} {
        margin-right: ($nth * $i)+px !important;
      }
      .u-mb#{$i * $nth} {
        margin-bottom: ($nth * $i)+px !important;
      }
      .u-ml#{$i * $nth} {
        margin-left: ($nth * $i)+px !important;
      }
      .u-pt#{$i * $nth} {
        padding-top: ($nth * $i)+px !important;
      }
      .u-pr#{$i * $nth} {
        padding-right: ($nth * $i)+px !important;
      }
      .u-pb#{$i * $nth} {
        padding-bottom: ($nth * $i)+px !important;
      }
      .u-pl#{$i * $nth} {
        padding-left: ($nth * $i)+px !important;
      }
    }
    @else {
      @include query-max($size) {
        .u-#{$size}-mt#{$i * $nth} {
          margin-top: ($nth * $i)+px !important;
        }
        .u-#{$size}-mr#{$i * $nth} {
          margin-right: ($nth * $i)+px !important;
        }
        .u-#{$size}-mb#{$i * $nth} {
          margin-bottom: ($nth * $i)+px !important;
        }
        .u-#{$size}-ml#{$i * $nth} {
          margin-left: ($nth * $i)+px !important;
        }
        .u-#{$size}-pt#{$i * $nth} {
          padding-top: ($nth * $i)+px !important;
        }
        .u-#{$size}-pr#{$i * $nth} {
          padding-right: ($nth * $i)+px !important;
        }
        .u-#{$size}-pb#{$i * $nth} {
          padding-bottom: ($nth * $i)+px !important;
        }
        .u-#{$size}-pl#{$i * $nth} {
          padding-left: ($nth * $i)+px !important;
        }
      }
    }
  }
}
